@startuml "FloatObjectGenerate"

package Player {
	class PlayerBorderMonitor {
		currentCellChunkPosition : Vector2Int

		+ 移動を監視()
	}
}

package FloatingObject{
	class GenerateSetting {
		cellScale : float
		cellWidth : int
		cellHeight : int
	}

	class FloatingObjectGenerator <<処理をまとめる>> {
		Generate(chunkPosition : CellChunk) : 今後何かになるかも
	}

	class CellChunkCreator {
		Create(chunkPosition : Vector2Int) : CellChunk
	}

	class FloatingObjectCreator {
		Create(chunk : CellChunk) : void
	}

	class FloatingObjectCreatePointer {
		PointCreatePositions(ref chunk : CellChunk) void
	}

	class FloatingObjectContainer {
		Chunks : List<CellGroup>

		AddCellGroup(chunk : CellChunk) : void
		DeleteGroup(chunk : CellChunk) : void
	}

	class Cell {
		min : Vector2
		max : Vector2
		center : Vector2
		size : float
	}

	class CellChunk {
		cells : Cell[,]
		x : int
		y : int
	}

	class FloatingObject {
		position : Vector2
		size : float
		その他なにかあれば値を持ったり
	}
}

PlayerBorderMonitor ..> FloatingObjectGenerator
Cell -> FloatingObject
CellChunk "1" -> "1..*" Cell


FloatingObjectGenerator ..> GenerateSetting
FloatingObjectGenerator --> CellChunkCreator
FloatingObjectGenerator --> FloatingObjectCreatePointer
FloatingObjectGenerator --> FloatingObjectCreator
FloatingObjectGenerator --> FloatingObjectContainer

note bottom of CellChunkCreator : 1. 受け取ったチャンク座標のCellChunk生成
note bottom of FloatingObjectCreatePointer : 2. チャンク内のCell群に生成場所だけ記述
note bottom of FloatingObjectCreator : 3. 実際にオブジェクトを生成
note bottom of FloatingObjectContainer : 4. ここに入れといてあとで消す時に使う


@enduml
